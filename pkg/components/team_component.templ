package components

import "pokemon-team-generator/pkg/models"
import "fmt"

// Exibe o time sorteado
templ Team(data models.DataRequest) {
    for _, pokemon := range data.Pokemons {
        @Pokemon(pokemon)
    }

    <div id="free-slots" hx-swap-oob="true">
        @RandomPokemonCount(data.FreeSlots)
    </div>

    <div id="generate-button" hx-swap-oob="true">
        @GenerateButton()
    </div>
}

templ Pokemon(pokemon models.Pokemon) {
    <div id={ fmt.Sprintf("pokemon-box-%d", pokemon.ID)} class="pokemon-box">
        <div id={ fmt.Sprintf("pokemon-%d", pokemon.ID)} class="pokemon-container">
        @PokemonDiv(pokemon)
        </div>
        @PokemonControls(pokemon.ID)
    </div>

}
templ Lock(pokemon models.Pokemon, freeSlots int) {
        <div id={ fmt.Sprintf("lock-box-%d", pokemon.ID)} hx-swap-oob="beforeend:#locked-box">
            <div id={ fmt.Sprintf("locked-pokemon-%d", pokemon.ID) }>
                <div id={ fmt.Sprintf("pokemon-%d", pokemon.ID) }>
                    @PokemonDiv(pokemon)
                </div>
                <div class="pokemon-controls">
                    <button id={ fmt.Sprintf("lock-button-%d", pokemon.ID) } 
                    name="unlock" 
                    hx-post="/unlock" 
                    hx-vals='js:{"freeSlots": document.getElementById("free-slots-count").textContent}'
                    value={ fmt.Sprint(pokemon.ID) } class="nes-btn is-warning">Unlock</button>
                </div>
            </div>
        </div>
    <div id={ fmt.Sprintf("pokemon-box-%d", pokemon.ID) } hx-swap-oob="delete"></div>
    <div id="free-slots" hx-swap-oob="true">
        @RandomPokemonCount(freeSlots)
    </div>
}

templ Unlock(pokemon models.Pokemon, freeSlots int) {
    <div id={ fmt.Sprintf("unlock-box-%d", pokemon.ID)} hx-swap-oob="beforeend:#unlocked-box">
        <div id={ fmt.Sprintf("pokemon-box-%d", pokemon.ID)} class="pokemon-box">
            <div id={ fmt.Sprintf("pokemon-%d", pokemon.ID) }>
                @PokemonDiv(pokemon)
            </div>
            @PokemonControls(pokemon.ID)
        </div>
    </div>
    <div id={ fmt.Sprintf("locked-pokemon-%d", pokemon.ID)} hx-swap-oob="delete"></div>

    <div id="free-slots" hx-swap-oob="true">
        @RandomPokemonCount(freeSlots)
    </div>
}


// Div com o pokémon sorteado
templ PokemonDiv(pokemon models.Pokemon) {
<div class="nes-container with-title is-centered team-box">
    <p class="title">
        { pokemon.Species.Name }
    </p>
    @checkCategory(pokemon)
    <img src={ pokemon.Sprite.FrontDefault } />
    @PokemonTypes(pokemon.Types)
</div>
}

templ PokemonControls(id int ) {
    <div class="pokemon-controls">
        <div id="button-swap">
            <button class="nes-btn is-success" hx-post="/swap" hx-swap="outerHTML" hx-target={ fmt.Sprintf("#pokemon-box-%d", id)} hx-include="#pokedex">Swap
            </button>
        </div>
        <div id="button-lock">
            <button id={ fmt.Sprintf("lock-button-%d", id) } 
        hx-vals='js:{"freeSlots": document.getElementById("free-slots-count").textContent}' name="lock" 
            hx-post="/lock" value={ fmt.Sprint(id) } class="nes-btn is-warning">Lock</button>
        </div>
    </div>

}
templ PokemonTypes(pokemonTypes []models.PokemonType) {
    <div style="margin-top: 1rem; width: 100%; font-size: 1rem; justify-content: center; text-align: center; display: flex;">
            for _, t := range pokemonTypes {
                <div class="nes-badge is-small" style="font-size: 0.5rem; display: flex; flex-flow: column; text-align: center; justify-content: center;">
                    <span class={fmt.Sprintf("is-%s-type", t.Type.Name)} style="color: white; -webkit-text-stroke: 0.1px;">{ t.Type.Name }</span>
                </div>
            }
    </div>
}
func pokemonToJson(pokemon models.Pokemon) string { 
    return fmt. Sprintf(`data: {"id": %d, "species": %v, "sprites": %v,"is_mythical": %v,"is_legendary": %v,"types": %v }`,
            pokemon.ID, 
            pokemon.Species,
            pokemon.Sprite,
            pokemon.IsMythical,
            pokemon.IsLegendary,
            pokemon.Types,
        ) 

}
templ checkCategory (pokemon models.Pokemon) {
    if pokemon.IsLegendary {
        <div style="font-size: 1rem; justify-content: center; display: flex; ">
            <div class="nes-badge is-small" style="font-size: 0.5rem;display: flex; text-align: center;">
                <span class="is-warning is-small">Lendário</span>
            </div>
        </div>
    }
    else if pokemon.IsMythical {
        <div style="font-size: 1rem; justify-content: center; display: flex; ">
            <div class="nes-badge is-small" style="font-size: 0.5rem;display: flex; text-align: center;">
                <span class="is-primary is-small">Mítico</span>
            </div>
        </div>

    }
}
